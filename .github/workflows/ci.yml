# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '.gitignore'
      - "CODEOWNERS"
      - "CODE_OF_CONDUCT.md"
      - "CONTRIBUTING.adoc"
      - "dco.txt"
      - "LICENSE"
      - "README.adoc"
      - "SECURITY.md"
  pull_request:
    branches:
      - '**'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest ]
        java: ['11', '17']

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven Java ${{ matrix.java }} - ${{ matrix.os }}
        run:  |
          mvn clean install -U -B -fae
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.java }}
          path: '**/surefire-reports/*.txt'
  legacy-test:
      runs-on: ubuntu-latest
      timeout-minutes: 90
      strategy:
          fail-fast: false
          matrix:
              java: ['11', '17']

      steps:
          - uses: actions/checkout@v4
          - name: Set up JDK ${{ matrix.java }}
            uses: actions/setup-java@v4
            with:
                java-version: ${{ matrix.java }}
                distribution: 'temurin'
                cache: 'maven'
          - name: Legacy Test - Java ${{ matrix.java }}
            run:  |
                mvn clean install -U -B
                mvn test -Dlegacy.test
          - uses: actions/upload-artifact@v4
            if: failure()
            with:
                name: legacy-surefire-reports-${{ matrix.java }}
                path: '**/surefire-reports/*.txt'

  format-check:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Validate Formatting
        run: |
          mvn -B validate -Pformat-check -Denforcer.skip=true
